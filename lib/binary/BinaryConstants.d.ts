import LocationType from '../data/LocationType';
declare const _default: {
    IDENTIFIER: string;
    ROUND_FACTOR: number;
    BITS_PER_BYTE: number;
    DECA_MICRO_DEG_FACTOR: number;
    BIT24FACTOR: number;
    BIT24FACTOR_REVERSED: number;
    BEARING_SECTOR: number;
    LENGTH_INTERVAL: number;
    IS_POINT: number;
    IS_NOT_POINT: number;
    AREA_CODE_CIRCLE: number;
    AREA_CODE_RECTANGLE: number;
    AREA_CODE_GRID: number;
    AREA_CODE_POLYGON: number;
    AREA_CODE_CLOSEDLINE: number;
    IS_NOT_AREA: number;
    HAS_ATTRIBUTES: number;
    HAS_NO_ATTRIBUTES: number;
    HEADER_SIZE: number;
    FIRST_LRP_SIZE: number;
    LRP_SIZE: number;
    LAST_LRP_SIZE: number;
    ABS_COORD_SIZE: number;
    RELATIVE_OFFSET_LENGTH: number;
    MIN_BYTES_LINE_LOCATION: number;
    MIN_BYTES_CLOSED_LINE_LOCATION: number;
    GEOCOORD_SIZE: number;
    MIN_BYTES_POINT_LOCATION: number;
    BINARY_VERSION_2: number;
    BINARY_VERSION_3: number;
    LATEST_BINARY_VERSION: number;
    HAS_OFFSET: number;
    OFFSET_BUCKETS: number;
    POINT_ALONG_LINE_SIZE: number;
    RELATIVE_COORD_SIZE: number;
    SMALL_RADIUS_BITS: number;
    MEDIUM_RADIUS_BITS: number;
    LARGE_RADIUS_BITS: number;
    EXTRA_LARGE_RADIUS_BITS: number;
    DIMENSION_SIZE: number;
    RECTANGLE_SIZE: number;
    LARGE_RECTANGLE_SIZE: number;
    GRID_SIZE: number;
    LARGE_GRID_SIZE: number;
    MIN_BYTES_POLYGON: number;
    POINT_OFFSET_SIZE: number;
    POINT_WITH_ACCESS_SIZE: number;
    POINT_LOCATION_VERSION: number;
    POINT_LOCATION_TYPES: Set<LocationType>;
    AREA_LOCATION_VERSION: number;
    AREA_LOCATION_TYPES: Set<LocationType>;
};
export default _default;
